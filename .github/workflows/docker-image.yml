---
name: "workflow"
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "ecs" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  cd:
    name: "Deployment"
    runs-on: "ubuntu-latest"
  ##if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: "Checkout Code"
        uses: "actions/checkout@v2"

      - name: Set tag
        id: vars
        run: echo "::set-output name=tag::${GITHUB_REF#refs/*/}"

      - name: Configure AWS credential
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECRs
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: optimus-reward-bot
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo $IMAGE_TAG
          sed -i "s|<changeme>|$ECR_REPOSITORY|g" ./terraform_with_ALB/ecs-task-definition.sh
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Init
        run: |
          cd terraform_with_ALB
          terraform init
          

      - name: Terraform Validate
        id: validate
        run: |
          cd terraform_with_ALB          
          terraform validate -no-color
              
      - name: Terraform Plan
        id: plan
        run: |
          cd terraform_with_ALB
          terraform plan -no-color -input=false
        continue-on-error: true
      - name: Terraform Apply
        run: |
          cd terraform_with_ALB
          terraform apply -auto-approve -input=false
      # - name: Terraform destroy
      #   run: |
      #     cd terraform_with_ALB
      #     terraform destroy -auto-approve -input=false
